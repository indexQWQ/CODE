#include <iostream>
using namespace std;

//构造函数和析构函数分别是对对象的初始化和清理
//对象的初始化和清理工作是编译器强制我们做的事情，因此如果我们不提供构造和析构，
//编译器会提供编译器提供的构造函数和析构函数是空实现
//构造函数语法：类名(){}
//构造函数可以有参数，因此可以发生重载
//析构函数语法：~类名(){}
//析构函数不可以有参数，因此不可以发生重载


class Person
{
public:
    //1.构造函数 进行初始化操作
    //没有返回值 不用写void
    //函数名与类名相同
    //构造函数可以有参数，因此可以发生重载
    //创建对象的时候，构造函数会自动调用，而且只调用一次
    Person()
    {
        cout<<"构造函数"<<endl;
    }

    //2.析构函数 进行初始化操作
    //没有返回值 不用写void
    //函数名与类名相同 在名称前面加~
    //析构函数不可以有参数，因此不可以发生重载
    //对象在销毁前，析构函数会自动调用，而且只调用一次

    ~Person()
    {
        cout<<"析构函数"<<endl;
    }
};

void test1()
{
    Person p;
}
int main()
{
    //test1();
    Person p;
    return 0;
}